/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export type ProtocolMetadataStruct = {
  name: PromiseOrValue<string>;
  description: PromiseOrValue<string>;
  websiteURL: PromiseOrValue<string>;
  iconURL: PromiseOrValue<string>;
  version: PromiseOrValue<BigNumberish>;
};

export type ProtocolMetadataStructOutput = [
  string,
  string,
  string,
  string,
  BigNumber
] & {
  name: string;
  description: string;
  websiteURL: string;
  iconURL: string;
  version: BigNumber;
};

export type AdapterMetadataStruct = {
  adapterAddress: PromiseOrValue<string>;
  adapterType: PromiseOrValue<string>;
};

export type AdapterMetadataStructOutput = [string, string] & {
  adapterAddress: string;
  adapterType: string;
};

export type TokenMetadataStruct = {
  token: PromiseOrValue<string>;
  name: PromiseOrValue<string>;
  symbol: PromiseOrValue<string>;
  decimals: PromiseOrValue<BigNumberish>;
};

export type TokenMetadataStructOutput = [string, string, string, number] & {
  token: string;
  name: string;
  symbol: string;
  decimals: number;
};

export type TokenBalanceStruct = {
  metadata: TokenMetadataStruct;
  amount: PromiseOrValue<BigNumberish>;
};

export type TokenBalanceStructOutput = [
  TokenMetadataStructOutput,
  BigNumber
] & { metadata: TokenMetadataStructOutput; amount: BigNumber };

export type FullTokenBalanceStruct = {
  base: TokenBalanceStruct;
  underlying: TokenBalanceStruct[];
};

export type FullTokenBalanceStructOutput = [
  TokenBalanceStructOutput,
  TokenBalanceStructOutput[]
] & { base: TokenBalanceStructOutput; underlying: TokenBalanceStructOutput[] };

export type AdapterBalanceStruct = {
  metadata: AdapterMetadataStruct;
  balances: FullTokenBalanceStruct[];
};

export type AdapterBalanceStructOutput = [
  AdapterMetadataStructOutput,
  FullTokenBalanceStructOutput[]
] & {
  metadata: AdapterMetadataStructOutput;
  balances: FullTokenBalanceStructOutput[];
};

export type ProtocolBalanceStruct = {
  metadata: ProtocolMetadataStruct;
  adapterBalances: AdapterBalanceStruct[];
};

export type ProtocolBalanceStructOutput = [
  ProtocolMetadataStructOutput,
  AdapterBalanceStructOutput[]
] & {
  metadata: ProtocolMetadataStructOutput;
  adapterBalances: AdapterBalanceStructOutput[];
};

export interface DefiSdkInterface extends utils.Interface {
  functions: {
    "addProtocolAdapters(string,address[],address[][])": FunctionFragment;
    "addProtocols(string[],(string,string,string,string,uint256)[],address[][],address[][][])": FunctionFragment;
    "addTokenAdapters(string[],address[])": FunctionFragment;
    "getAdapterBalance(address,address,address[])": FunctionFragment;
    "getAdapterBalances(address,address[])": FunctionFragment;
    "getBalances(address)": FunctionFragment;
    "getFinalFullTokenBalance(string,address)": FunctionFragment;
    "getFullTokenBalance(string,address)": FunctionFragment;
    "getProtocolAdapters(string)": FunctionFragment;
    "getProtocolBalances(address,string[])": FunctionFragment;
    "getProtocolMetadata(string)": FunctionFragment;
    "getProtocolNames()": FunctionFragment;
    "getSupportedTokens(address)": FunctionFragment;
    "getTokenAdapter(string)": FunctionFragment;
    "getTokenAdapterNames()": FunctionFragment;
    "isValidProtocol(string)": FunctionFragment;
    "isValidTokenAdapter(string)": FunctionFragment;
    "owner()": FunctionFragment;
    "removeProtocolAdapters(string,uint256[])": FunctionFragment;
    "removeProtocols(string[])": FunctionFragment;
    "removeTokenAdapters(string[])": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "updateProtocolAdapter(string,uint256,address,address[])": FunctionFragment;
    "updateProtocolMetadata(string,string,string,string,string)": FunctionFragment;
    "updateTokenAdapter(string,address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addProtocolAdapters"
      | "addProtocolAdapters(string,address[],address[][])"
      | "addProtocols"
      | "addProtocols(string[],(string,string,string,string,uint256)[],address[][],address[][][])"
      | "addTokenAdapters"
      | "addTokenAdapters(string[],address[])"
      | "getAdapterBalance"
      | "getAdapterBalance(address,address,address[])"
      | "getAdapterBalances"
      | "getAdapterBalances(address,address[])"
      | "getBalances"
      | "getBalances(address)"
      | "getFinalFullTokenBalance"
      | "getFinalFullTokenBalance(string,address)"
      | "getFullTokenBalance"
      | "getFullTokenBalance(string,address)"
      | "getProtocolAdapters"
      | "getProtocolAdapters(string)"
      | "getProtocolBalances"
      | "getProtocolBalances(address,string[])"
      | "getProtocolMetadata"
      | "getProtocolMetadata(string)"
      | "getProtocolNames"
      | "getProtocolNames()"
      | "getSupportedTokens"
      | "getSupportedTokens(address)"
      | "getTokenAdapter"
      | "getTokenAdapter(string)"
      | "getTokenAdapterNames"
      | "getTokenAdapterNames()"
      | "isValidProtocol"
      | "isValidProtocol(string)"
      | "isValidTokenAdapter"
      | "isValidTokenAdapter(string)"
      | "owner"
      | "owner()"
      | "removeProtocolAdapters"
      | "removeProtocolAdapters(string,uint256[])"
      | "removeProtocols"
      | "removeProtocols(string[])"
      | "removeTokenAdapters"
      | "removeTokenAdapters(string[])"
      | "transferOwnership"
      | "transferOwnership(address)"
      | "updateProtocolAdapter"
      | "updateProtocolAdapter(string,uint256,address,address[])"
      | "updateProtocolMetadata"
      | "updateProtocolMetadata(string,string,string,string,string)"
      | "updateTokenAdapter"
      | "updateTokenAdapter(string,address)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addProtocolAdapters",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>[],
      PromiseOrValue<string>[][]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addProtocolAdapters(string,address[],address[][])",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>[],
      PromiseOrValue<string>[][]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addProtocols",
    values: [
      PromiseOrValue<string>[],
      ProtocolMetadataStruct[],
      PromiseOrValue<string>[][],
      PromiseOrValue<string>[][][]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addProtocols(string[],(string,string,string,string,uint256)[],address[][],address[][][])",
    values: [
      PromiseOrValue<string>[],
      ProtocolMetadataStruct[],
      PromiseOrValue<string>[][],
      PromiseOrValue<string>[][][]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addTokenAdapters",
    values: [PromiseOrValue<string>[], PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "addTokenAdapters(string[],address[])",
    values: [PromiseOrValue<string>[], PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getAdapterBalance",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getAdapterBalance(address,address,address[])",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getAdapterBalances",
    values: [PromiseOrValue<string>, PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getAdapterBalances(address,address[])",
    values: [PromiseOrValue<string>, PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getBalances",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getBalances(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFinalFullTokenBalance",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFinalFullTokenBalance(string,address)",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFullTokenBalance",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFullTokenBalance(string,address)",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getProtocolAdapters",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getProtocolAdapters(string)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getProtocolBalances",
    values: [PromiseOrValue<string>, PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getProtocolBalances(address,string[])",
    values: [PromiseOrValue<string>, PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getProtocolMetadata",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getProtocolMetadata(string)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getProtocolNames",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getProtocolNames()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSupportedTokens",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getSupportedTokens(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenAdapter",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenAdapter(string)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenAdapterNames",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenAdapterNames()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isValidProtocol",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isValidProtocol(string)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isValidTokenAdapter",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isValidTokenAdapter(string)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "removeProtocolAdapters",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "removeProtocolAdapters(string,uint256[])",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "removeProtocols",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "removeProtocols(string[])",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "removeTokenAdapters",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "removeTokenAdapters(string[])",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "updateProtocolAdapter",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "updateProtocolAdapter(string,uint256,address,address[])",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "updateProtocolMetadata",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "updateProtocolMetadata(string,string,string,string,string)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "updateTokenAdapter",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "updateTokenAdapter(string,address)",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "addProtocolAdapters",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addProtocolAdapters(string,address[],address[][])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addProtocols",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addProtocols(string[],(string,string,string,string,uint256)[],address[][],address[][][])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addTokenAdapters",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addTokenAdapters(string[],address[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAdapterBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAdapterBalance(address,address,address[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAdapterBalances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAdapterBalances(address,address[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBalances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBalances(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFinalFullTokenBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFinalFullTokenBalance(string,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFullTokenBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFullTokenBalance(string,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProtocolAdapters",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProtocolAdapters(string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProtocolBalances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProtocolBalances(address,string[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProtocolMetadata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProtocolMetadata(string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProtocolNames",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProtocolNames()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSupportedTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSupportedTokens(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenAdapter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenAdapter(string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenAdapterNames",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenAdapterNames()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isValidProtocol",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isValidProtocol(string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isValidTokenAdapter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isValidTokenAdapter(string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeProtocolAdapters",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeProtocolAdapters(string,uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeProtocols",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeProtocols(string[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeTokenAdapters",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeTokenAdapters(string[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateProtocolAdapter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateProtocolAdapter(string,uint256,address,address[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateProtocolMetadata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateProtocolMetadata(string,string,string,string,string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateTokenAdapter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateTokenAdapter(string,address)",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "OwnershipTransferred(address,address)"
  ): EventFragment;
}

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface DefiSdk extends BaseContract {
  contractName: "DefiSdk";

  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: DefiSdkInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addProtocolAdapters(
      protocolName: PromiseOrValue<string>,
      adapters: PromiseOrValue<string>[],
      tokens: PromiseOrValue<string>[][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "addProtocolAdapters(string,address[],address[][])"(
      protocolName: PromiseOrValue<string>,
      adapters: PromiseOrValue<string>[],
      tokens: PromiseOrValue<string>[][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addProtocols(
      protocolNames: PromiseOrValue<string>[],
      metadata: ProtocolMetadataStruct[],
      adapters: PromiseOrValue<string>[][],
      tokens: PromiseOrValue<string>[][][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "addProtocols(string[],(string,string,string,string,uint256)[],address[][],address[][][])"(
      protocolNames: PromiseOrValue<string>[],
      metadata: ProtocolMetadataStruct[],
      adapters: PromiseOrValue<string>[][],
      tokens: PromiseOrValue<string>[][][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addTokenAdapters(
      tokenAdapterNames: PromiseOrValue<string>[],
      adapters: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "addTokenAdapters(string[],address[])"(
      tokenAdapterNames: PromiseOrValue<string>[],
      adapters: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getAdapterBalance(
      account: PromiseOrValue<string>,
      adapter: PromiseOrValue<string>,
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[AdapterBalanceStructOutput]>;

    "getAdapterBalance(address,address,address[])"(
      account: PromiseOrValue<string>,
      adapter: PromiseOrValue<string>,
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[AdapterBalanceStructOutput]>;

    getAdapterBalances(
      account: PromiseOrValue<string>,
      adapters: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[AdapterBalanceStructOutput[]]>;

    "getAdapterBalances(address,address[])"(
      account: PromiseOrValue<string>,
      adapters: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[AdapterBalanceStructOutput[]]>;

    getBalances(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[ProtocolBalanceStructOutput[]]>;

    "getBalances(address)"(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[ProtocolBalanceStructOutput[]]>;

    getFinalFullTokenBalance(
      tokenType: PromiseOrValue<string>,
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[FullTokenBalanceStructOutput]>;

    "getFinalFullTokenBalance(string,address)"(
      tokenType: PromiseOrValue<string>,
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[FullTokenBalanceStructOutput]>;

    getFullTokenBalance(
      tokenType: PromiseOrValue<string>,
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[FullTokenBalanceStructOutput]>;

    "getFullTokenBalance(string,address)"(
      tokenType: PromiseOrValue<string>,
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[FullTokenBalanceStructOutput]>;

    getProtocolAdapters(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    "getProtocolAdapters(string)"(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    getProtocolBalances(
      account: PromiseOrValue<string>,
      protocolNames: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[ProtocolBalanceStructOutput[]]>;

    "getProtocolBalances(address,string[])"(
      account: PromiseOrValue<string>,
      protocolNames: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[ProtocolBalanceStructOutput[]]>;

    getProtocolMetadata(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[ProtocolMetadataStructOutput]>;

    "getProtocolMetadata(string)"(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[ProtocolMetadataStructOutput]>;

    getProtocolNames(overrides?: CallOverrides): Promise<[string[]]>;

    "getProtocolNames()"(overrides?: CallOverrides): Promise<[string[]]>;

    getSupportedTokens(
      adapter: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    "getSupportedTokens(address)"(
      adapter: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    getTokenAdapter(
      tokenAdapterName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getTokenAdapter(string)"(
      tokenAdapterName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getTokenAdapterNames(overrides?: CallOverrides): Promise<[string[]]>;

    "getTokenAdapterNames()"(overrides?: CallOverrides): Promise<[string[]]>;

    isValidProtocol(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isValidProtocol(string)"(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isValidTokenAdapter(
      tokenAdapterName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isValidTokenAdapter(string)"(
      tokenAdapterName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    removeProtocolAdapters(
      protocolName: PromiseOrValue<string>,
      adapterIndices: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "removeProtocolAdapters(string,uint256[])"(
      protocolName: PromiseOrValue<string>,
      adapterIndices: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    removeProtocols(
      protocolNames: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "removeProtocols(string[])"(
      protocolNames: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    removeTokenAdapters(
      tokenAdapterNames: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "removeTokenAdapters(string[])"(
      tokenAdapterNames: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    updateProtocolAdapter(
      protocolName: PromiseOrValue<string>,
      index: PromiseOrValue<BigNumberish>,
      newAdapterAddress: PromiseOrValue<string>,
      newSupportedTokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "updateProtocolAdapter(string,uint256,address,address[])"(
      protocolName: PromiseOrValue<string>,
      index: PromiseOrValue<BigNumberish>,
      newAdapterAddress: PromiseOrValue<string>,
      newSupportedTokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    updateProtocolMetadata(
      protocolName: PromiseOrValue<string>,
      name: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      websiteURL: PromiseOrValue<string>,
      iconURL: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "updateProtocolMetadata(string,string,string,string,string)"(
      protocolName: PromiseOrValue<string>,
      name: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      websiteURL: PromiseOrValue<string>,
      iconURL: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    updateTokenAdapter(
      tokenAdapterName: PromiseOrValue<string>,
      adapter: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "updateTokenAdapter(string,address)"(
      tokenAdapterName: PromiseOrValue<string>,
      adapter: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  addProtocolAdapters(
    protocolName: PromiseOrValue<string>,
    adapters: PromiseOrValue<string>[],
    tokens: PromiseOrValue<string>[][],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "addProtocolAdapters(string,address[],address[][])"(
    protocolName: PromiseOrValue<string>,
    adapters: PromiseOrValue<string>[],
    tokens: PromiseOrValue<string>[][],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addProtocols(
    protocolNames: PromiseOrValue<string>[],
    metadata: ProtocolMetadataStruct[],
    adapters: PromiseOrValue<string>[][],
    tokens: PromiseOrValue<string>[][][],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "addProtocols(string[],(string,string,string,string,uint256)[],address[][],address[][][])"(
    protocolNames: PromiseOrValue<string>[],
    metadata: ProtocolMetadataStruct[],
    adapters: PromiseOrValue<string>[][],
    tokens: PromiseOrValue<string>[][][],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addTokenAdapters(
    tokenAdapterNames: PromiseOrValue<string>[],
    adapters: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "addTokenAdapters(string[],address[])"(
    tokenAdapterNames: PromiseOrValue<string>[],
    adapters: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getAdapterBalance(
    account: PromiseOrValue<string>,
    adapter: PromiseOrValue<string>,
    tokens: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<AdapterBalanceStructOutput>;

  "getAdapterBalance(address,address,address[])"(
    account: PromiseOrValue<string>,
    adapter: PromiseOrValue<string>,
    tokens: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<AdapterBalanceStructOutput>;

  getAdapterBalances(
    account: PromiseOrValue<string>,
    adapters: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<AdapterBalanceStructOutput[]>;

  "getAdapterBalances(address,address[])"(
    account: PromiseOrValue<string>,
    adapters: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<AdapterBalanceStructOutput[]>;

  getBalances(
    account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<ProtocolBalanceStructOutput[]>;

  "getBalances(address)"(
    account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<ProtocolBalanceStructOutput[]>;

  getFinalFullTokenBalance(
    tokenType: PromiseOrValue<string>,
    token: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<FullTokenBalanceStructOutput>;

  "getFinalFullTokenBalance(string,address)"(
    tokenType: PromiseOrValue<string>,
    token: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<FullTokenBalanceStructOutput>;

  getFullTokenBalance(
    tokenType: PromiseOrValue<string>,
    token: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<FullTokenBalanceStructOutput>;

  "getFullTokenBalance(string,address)"(
    tokenType: PromiseOrValue<string>,
    token: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<FullTokenBalanceStructOutput>;

  getProtocolAdapters(
    protocolName: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "getProtocolAdapters(string)"(
    protocolName: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getProtocolBalances(
    account: PromiseOrValue<string>,
    protocolNames: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<ProtocolBalanceStructOutput[]>;

  "getProtocolBalances(address,string[])"(
    account: PromiseOrValue<string>,
    protocolNames: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<ProtocolBalanceStructOutput[]>;

  getProtocolMetadata(
    protocolName: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<ProtocolMetadataStructOutput>;

  "getProtocolMetadata(string)"(
    protocolName: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<ProtocolMetadataStructOutput>;

  getProtocolNames(overrides?: CallOverrides): Promise<string[]>;

  "getProtocolNames()"(overrides?: CallOverrides): Promise<string[]>;

  getSupportedTokens(
    adapter: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "getSupportedTokens(address)"(
    adapter: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getTokenAdapter(
    tokenAdapterName: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  "getTokenAdapter(string)"(
    tokenAdapterName: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  getTokenAdapterNames(overrides?: CallOverrides): Promise<string[]>;

  "getTokenAdapterNames()"(overrides?: CallOverrides): Promise<string[]>;

  isValidProtocol(
    protocolName: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isValidProtocol(string)"(
    protocolName: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isValidTokenAdapter(
    tokenAdapterName: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isValidTokenAdapter(string)"(
    tokenAdapterName: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  removeProtocolAdapters(
    protocolName: PromiseOrValue<string>,
    adapterIndices: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "removeProtocolAdapters(string,uint256[])"(
    protocolName: PromiseOrValue<string>,
    adapterIndices: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  removeProtocols(
    protocolNames: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "removeProtocols(string[])"(
    protocolNames: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  removeTokenAdapters(
    tokenAdapterNames: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "removeTokenAdapters(string[])"(
    tokenAdapterNames: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  updateProtocolAdapter(
    protocolName: PromiseOrValue<string>,
    index: PromiseOrValue<BigNumberish>,
    newAdapterAddress: PromiseOrValue<string>,
    newSupportedTokens: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "updateProtocolAdapter(string,uint256,address,address[])"(
    protocolName: PromiseOrValue<string>,
    index: PromiseOrValue<BigNumberish>,
    newAdapterAddress: PromiseOrValue<string>,
    newSupportedTokens: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  updateProtocolMetadata(
    protocolName: PromiseOrValue<string>,
    name: PromiseOrValue<string>,
    description: PromiseOrValue<string>,
    websiteURL: PromiseOrValue<string>,
    iconURL: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "updateProtocolMetadata(string,string,string,string,string)"(
    protocolName: PromiseOrValue<string>,
    name: PromiseOrValue<string>,
    description: PromiseOrValue<string>,
    websiteURL: PromiseOrValue<string>,
    iconURL: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  updateTokenAdapter(
    tokenAdapterName: PromiseOrValue<string>,
    adapter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "updateTokenAdapter(string,address)"(
    tokenAdapterName: PromiseOrValue<string>,
    adapter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addProtocolAdapters(
      protocolName: PromiseOrValue<string>,
      adapters: PromiseOrValue<string>[],
      tokens: PromiseOrValue<string>[][],
      overrides?: CallOverrides
    ): Promise<void>;

    "addProtocolAdapters(string,address[],address[][])"(
      protocolName: PromiseOrValue<string>,
      adapters: PromiseOrValue<string>[],
      tokens: PromiseOrValue<string>[][],
      overrides?: CallOverrides
    ): Promise<void>;

    addProtocols(
      protocolNames: PromiseOrValue<string>[],
      metadata: ProtocolMetadataStruct[],
      adapters: PromiseOrValue<string>[][],
      tokens: PromiseOrValue<string>[][][],
      overrides?: CallOverrides
    ): Promise<void>;

    "addProtocols(string[],(string,string,string,string,uint256)[],address[][],address[][][])"(
      protocolNames: PromiseOrValue<string>[],
      metadata: ProtocolMetadataStruct[],
      adapters: PromiseOrValue<string>[][],
      tokens: PromiseOrValue<string>[][][],
      overrides?: CallOverrides
    ): Promise<void>;

    addTokenAdapters(
      tokenAdapterNames: PromiseOrValue<string>[],
      adapters: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "addTokenAdapters(string[],address[])"(
      tokenAdapterNames: PromiseOrValue<string>[],
      adapters: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    getAdapterBalance(
      account: PromiseOrValue<string>,
      adapter: PromiseOrValue<string>,
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<AdapterBalanceStructOutput>;

    "getAdapterBalance(address,address,address[])"(
      account: PromiseOrValue<string>,
      adapter: PromiseOrValue<string>,
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<AdapterBalanceStructOutput>;

    getAdapterBalances(
      account: PromiseOrValue<string>,
      adapters: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<AdapterBalanceStructOutput[]>;

    "getAdapterBalances(address,address[])"(
      account: PromiseOrValue<string>,
      adapters: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<AdapterBalanceStructOutput[]>;

    getBalances(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<ProtocolBalanceStructOutput[]>;

    "getBalances(address)"(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<ProtocolBalanceStructOutput[]>;

    getFinalFullTokenBalance(
      tokenType: PromiseOrValue<string>,
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<FullTokenBalanceStructOutput>;

    "getFinalFullTokenBalance(string,address)"(
      tokenType: PromiseOrValue<string>,
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<FullTokenBalanceStructOutput>;

    getFullTokenBalance(
      tokenType: PromiseOrValue<string>,
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<FullTokenBalanceStructOutput>;

    "getFullTokenBalance(string,address)"(
      tokenType: PromiseOrValue<string>,
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<FullTokenBalanceStructOutput>;

    getProtocolAdapters(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "getProtocolAdapters(string)"(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getProtocolBalances(
      account: PromiseOrValue<string>,
      protocolNames: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<ProtocolBalanceStructOutput[]>;

    "getProtocolBalances(address,string[])"(
      account: PromiseOrValue<string>,
      protocolNames: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<ProtocolBalanceStructOutput[]>;

    getProtocolMetadata(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<ProtocolMetadataStructOutput>;

    "getProtocolMetadata(string)"(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<ProtocolMetadataStructOutput>;

    getProtocolNames(overrides?: CallOverrides): Promise<string[]>;

    "getProtocolNames()"(overrides?: CallOverrides): Promise<string[]>;

    getSupportedTokens(
      adapter: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "getSupportedTokens(address)"(
      adapter: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getTokenAdapter(
      tokenAdapterName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    "getTokenAdapter(string)"(
      tokenAdapterName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    getTokenAdapterNames(overrides?: CallOverrides): Promise<string[]>;

    "getTokenAdapterNames()"(overrides?: CallOverrides): Promise<string[]>;

    isValidProtocol(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isValidProtocol(string)"(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isValidTokenAdapter(
      tokenAdapterName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isValidTokenAdapter(string)"(
      tokenAdapterName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    removeProtocolAdapters(
      protocolName: PromiseOrValue<string>,
      adapterIndices: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "removeProtocolAdapters(string,uint256[])"(
      protocolName: PromiseOrValue<string>,
      adapterIndices: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    removeProtocols(
      protocolNames: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "removeProtocols(string[])"(
      protocolNames: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    removeTokenAdapters(
      tokenAdapterNames: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "removeTokenAdapters(string[])"(
      tokenAdapterNames: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    updateProtocolAdapter(
      protocolName: PromiseOrValue<string>,
      index: PromiseOrValue<BigNumberish>,
      newAdapterAddress: PromiseOrValue<string>,
      newSupportedTokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "updateProtocolAdapter(string,uint256,address,address[])"(
      protocolName: PromiseOrValue<string>,
      index: PromiseOrValue<BigNumberish>,
      newAdapterAddress: PromiseOrValue<string>,
      newSupportedTokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    updateProtocolMetadata(
      protocolName: PromiseOrValue<string>,
      name: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      websiteURL: PromiseOrValue<string>,
      iconURL: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateProtocolMetadata(string,string,string,string,string)"(
      protocolName: PromiseOrValue<string>,
      name: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      websiteURL: PromiseOrValue<string>,
      iconURL: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    updateTokenAdapter(
      tokenAdapterName: PromiseOrValue<string>,
      adapter: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateTokenAdapter(string,address)"(
      tokenAdapterName: PromiseOrValue<string>,
      adapter: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "OwnershipTransferred(address,address)"(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
  };

  estimateGas: {
    addProtocolAdapters(
      protocolName: PromiseOrValue<string>,
      adapters: PromiseOrValue<string>[],
      tokens: PromiseOrValue<string>[][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "addProtocolAdapters(string,address[],address[][])"(
      protocolName: PromiseOrValue<string>,
      adapters: PromiseOrValue<string>[],
      tokens: PromiseOrValue<string>[][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addProtocols(
      protocolNames: PromiseOrValue<string>[],
      metadata: ProtocolMetadataStruct[],
      adapters: PromiseOrValue<string>[][],
      tokens: PromiseOrValue<string>[][][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "addProtocols(string[],(string,string,string,string,uint256)[],address[][],address[][][])"(
      protocolNames: PromiseOrValue<string>[],
      metadata: ProtocolMetadataStruct[],
      adapters: PromiseOrValue<string>[][],
      tokens: PromiseOrValue<string>[][][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addTokenAdapters(
      tokenAdapterNames: PromiseOrValue<string>[],
      adapters: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "addTokenAdapters(string[],address[])"(
      tokenAdapterNames: PromiseOrValue<string>[],
      adapters: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getAdapterBalance(
      account: PromiseOrValue<string>,
      adapter: PromiseOrValue<string>,
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAdapterBalance(address,address,address[])"(
      account: PromiseOrValue<string>,
      adapter: PromiseOrValue<string>,
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAdapterBalances(
      account: PromiseOrValue<string>,
      adapters: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAdapterBalances(address,address[])"(
      account: PromiseOrValue<string>,
      adapters: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBalances(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getBalances(address)"(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFinalFullTokenBalance(
      tokenType: PromiseOrValue<string>,
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFinalFullTokenBalance(string,address)"(
      tokenType: PromiseOrValue<string>,
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFullTokenBalance(
      tokenType: PromiseOrValue<string>,
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFullTokenBalance(string,address)"(
      tokenType: PromiseOrValue<string>,
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProtocolAdapters(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getProtocolAdapters(string)"(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProtocolBalances(
      account: PromiseOrValue<string>,
      protocolNames: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getProtocolBalances(address,string[])"(
      account: PromiseOrValue<string>,
      protocolNames: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProtocolMetadata(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getProtocolMetadata(string)"(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProtocolNames(overrides?: CallOverrides): Promise<BigNumber>;

    "getProtocolNames()"(overrides?: CallOverrides): Promise<BigNumber>;

    getSupportedTokens(
      adapter: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getSupportedTokens(address)"(
      adapter: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenAdapter(
      tokenAdapterName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTokenAdapter(string)"(
      tokenAdapterName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenAdapterNames(overrides?: CallOverrides): Promise<BigNumber>;

    "getTokenAdapterNames()"(overrides?: CallOverrides): Promise<BigNumber>;

    isValidProtocol(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isValidProtocol(string)"(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isValidTokenAdapter(
      tokenAdapterName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isValidTokenAdapter(string)"(
      tokenAdapterName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    removeProtocolAdapters(
      protocolName: PromiseOrValue<string>,
      adapterIndices: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "removeProtocolAdapters(string,uint256[])"(
      protocolName: PromiseOrValue<string>,
      adapterIndices: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    removeProtocols(
      protocolNames: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "removeProtocols(string[])"(
      protocolNames: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    removeTokenAdapters(
      tokenAdapterNames: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "removeTokenAdapters(string[])"(
      tokenAdapterNames: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    updateProtocolAdapter(
      protocolName: PromiseOrValue<string>,
      index: PromiseOrValue<BigNumberish>,
      newAdapterAddress: PromiseOrValue<string>,
      newSupportedTokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "updateProtocolAdapter(string,uint256,address,address[])"(
      protocolName: PromiseOrValue<string>,
      index: PromiseOrValue<BigNumberish>,
      newAdapterAddress: PromiseOrValue<string>,
      newSupportedTokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    updateProtocolMetadata(
      protocolName: PromiseOrValue<string>,
      name: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      websiteURL: PromiseOrValue<string>,
      iconURL: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "updateProtocolMetadata(string,string,string,string,string)"(
      protocolName: PromiseOrValue<string>,
      name: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      websiteURL: PromiseOrValue<string>,
      iconURL: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    updateTokenAdapter(
      tokenAdapterName: PromiseOrValue<string>,
      adapter: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "updateTokenAdapter(string,address)"(
      tokenAdapterName: PromiseOrValue<string>,
      adapter: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addProtocolAdapters(
      protocolName: PromiseOrValue<string>,
      adapters: PromiseOrValue<string>[],
      tokens: PromiseOrValue<string>[][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "addProtocolAdapters(string,address[],address[][])"(
      protocolName: PromiseOrValue<string>,
      adapters: PromiseOrValue<string>[],
      tokens: PromiseOrValue<string>[][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addProtocols(
      protocolNames: PromiseOrValue<string>[],
      metadata: ProtocolMetadataStruct[],
      adapters: PromiseOrValue<string>[][],
      tokens: PromiseOrValue<string>[][][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "addProtocols(string[],(string,string,string,string,uint256)[],address[][],address[][][])"(
      protocolNames: PromiseOrValue<string>[],
      metadata: ProtocolMetadataStruct[],
      adapters: PromiseOrValue<string>[][],
      tokens: PromiseOrValue<string>[][][],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addTokenAdapters(
      tokenAdapterNames: PromiseOrValue<string>[],
      adapters: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "addTokenAdapters(string[],address[])"(
      tokenAdapterNames: PromiseOrValue<string>[],
      adapters: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getAdapterBalance(
      account: PromiseOrValue<string>,
      adapter: PromiseOrValue<string>,
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAdapterBalance(address,address,address[])"(
      account: PromiseOrValue<string>,
      adapter: PromiseOrValue<string>,
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAdapterBalances(
      account: PromiseOrValue<string>,
      adapters: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAdapterBalances(address,address[])"(
      account: PromiseOrValue<string>,
      adapters: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getBalances(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getBalances(address)"(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFinalFullTokenBalance(
      tokenType: PromiseOrValue<string>,
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFinalFullTokenBalance(string,address)"(
      tokenType: PromiseOrValue<string>,
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFullTokenBalance(
      tokenType: PromiseOrValue<string>,
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFullTokenBalance(string,address)"(
      tokenType: PromiseOrValue<string>,
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProtocolAdapters(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getProtocolAdapters(string)"(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProtocolBalances(
      account: PromiseOrValue<string>,
      protocolNames: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getProtocolBalances(address,string[])"(
      account: PromiseOrValue<string>,
      protocolNames: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProtocolMetadata(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getProtocolMetadata(string)"(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProtocolNames(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getProtocolNames()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSupportedTokens(
      adapter: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getSupportedTokens(address)"(
      adapter: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenAdapter(
      tokenAdapterName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTokenAdapter(string)"(
      tokenAdapterName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenAdapterNames(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTokenAdapterNames()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isValidProtocol(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isValidProtocol(string)"(
      protocolName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isValidTokenAdapter(
      tokenAdapterName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isValidTokenAdapter(string)"(
      tokenAdapterName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    removeProtocolAdapters(
      protocolName: PromiseOrValue<string>,
      adapterIndices: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "removeProtocolAdapters(string,uint256[])"(
      protocolName: PromiseOrValue<string>,
      adapterIndices: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    removeProtocols(
      protocolNames: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "removeProtocols(string[])"(
      protocolNames: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    removeTokenAdapters(
      tokenAdapterNames: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "removeTokenAdapters(string[])"(
      tokenAdapterNames: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    updateProtocolAdapter(
      protocolName: PromiseOrValue<string>,
      index: PromiseOrValue<BigNumberish>,
      newAdapterAddress: PromiseOrValue<string>,
      newSupportedTokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "updateProtocolAdapter(string,uint256,address,address[])"(
      protocolName: PromiseOrValue<string>,
      index: PromiseOrValue<BigNumberish>,
      newAdapterAddress: PromiseOrValue<string>,
      newSupportedTokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    updateProtocolMetadata(
      protocolName: PromiseOrValue<string>,
      name: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      websiteURL: PromiseOrValue<string>,
      iconURL: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "updateProtocolMetadata(string,string,string,string,string)"(
      protocolName: PromiseOrValue<string>,
      name: PromiseOrValue<string>,
      description: PromiseOrValue<string>,
      websiteURL: PromiseOrValue<string>,
      iconURL: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    updateTokenAdapter(
      tokenAdapterName: PromiseOrValue<string>,
      adapter: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "updateTokenAdapter(string,address)"(
      tokenAdapterName: PromiseOrValue<string>,
      adapter: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
