/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export declare namespace NestRedeem {
  export type BestPriceStruct = {
    price: PromiseOrValue<BigNumberish>;
    ammIndex: PromiseOrValue<BigNumberish>;
  };

  export type BestPriceStructOutput = [BigNumber, BigNumber] & {
    price: BigNumber;
    ammIndex: BigNumber;
  };
}

export interface NestRedeemInterface extends utils.Interface {
  functions: {
    "customHops(address)": FunctionFragment;
    "dexSwap(address,address,uint256,uint256)": FunctionFragment;
    "getBestPrice(address,address,uint256)": FunctionFragment;
    "owner()": FunctionFragment;
    "redeemNestToWeth(address,uint256)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setBalancerPoolMapping(address,bytes32)": FunctionFragment;
    "setCustomHop(address,address)": FunctionFragment;
    "setUniPoolMapping(address,uint16)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "customHops"
      | "customHops(address)"
      | "dexSwap"
      | "dexSwap(address,address,uint256,uint256)"
      | "getBestPrice"
      | "getBestPrice(address,address,uint256)"
      | "owner"
      | "owner()"
      | "redeemNestToWeth"
      | "redeemNestToWeth(address,uint256)"
      | "renounceOwnership"
      | "renounceOwnership()"
      | "setBalancerPoolMapping"
      | "setBalancerPoolMapping(address,bytes32)"
      | "setCustomHop"
      | "setCustomHop(address,address)"
      | "setUniPoolMapping"
      | "setUniPoolMapping(address,uint16)"
      | "transferOwnership"
      | "transferOwnership(address)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "customHops",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "customHops(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "dexSwap",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "dexSwap(address,address,uint256,uint256)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getBestPrice",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getBestPrice(address,address,uint256)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "redeemNestToWeth",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemNestToWeth(address,uint256)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setBalancerPoolMapping",
    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "setBalancerPoolMapping(address,bytes32)",
    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "setCustomHop",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setCustomHop(address,address)",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setUniPoolMapping",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setUniPoolMapping(address,uint16)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership(address)",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(functionFragment: "customHops", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "customHops(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "dexSwap", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "dexSwap(address,address,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBestPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBestPrice(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "redeemNestToWeth",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeemNestToWeth(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBalancerPoolMapping",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBalancerPoolMapping(address,bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCustomHop",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCustomHop(address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setUniPoolMapping",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setUniPoolMapping(address,uint16)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership(address)",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "OwnershipTransferred(address,address)"
  ): EventFragment;
}

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface NestRedeem extends BaseContract {
  contractName: "NestRedeem";

  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: NestRedeemInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    customHops(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "customHops(address)"(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    dexSwap(
      _assetIn: PromiseOrValue<string>,
      _assetOut: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _ammIndex: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "dexSwap(address,address,uint256,uint256)"(
      _assetIn: PromiseOrValue<string>,
      _assetOut: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _ammIndex: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getBestPrice(
      _assetIn: PromiseOrValue<string>,
      _assetOut: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "getBestPrice(address,address,uint256)"(
      _assetIn: PromiseOrValue<string>,
      _assetOut: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    redeemNestToWeth(
      _nestAddress: PromiseOrValue<string>,
      _nestAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "redeemNestToWeth(address,uint256)"(
      _nestAddress: PromiseOrValue<string>,
      _nestAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setBalancerPoolMapping(
      _inputAsset: PromiseOrValue<string>,
      _pool: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setBalancerPoolMapping(address,bytes32)"(
      _inputAsset: PromiseOrValue<string>,
      _pool: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setCustomHop(
      _token: PromiseOrValue<string>,
      _hop: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setCustomHop(address,address)"(
      _token: PromiseOrValue<string>,
      _hop: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setUniPoolMapping(
      _outputAsset: PromiseOrValue<string>,
      _Fee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setUniPoolMapping(address,uint16)"(
      _outputAsset: PromiseOrValue<string>,
      _Fee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  customHops(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  "customHops(address)"(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  dexSwap(
    _assetIn: PromiseOrValue<string>,
    _assetOut: PromiseOrValue<string>,
    _amountIn: PromiseOrValue<BigNumberish>,
    _ammIndex: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "dexSwap(address,address,uint256,uint256)"(
    _assetIn: PromiseOrValue<string>,
    _assetOut: PromiseOrValue<string>,
    _amountIn: PromiseOrValue<BigNumberish>,
    _ammIndex: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getBestPrice(
    _assetIn: PromiseOrValue<string>,
    _assetOut: PromiseOrValue<string>,
    _amountIn: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "getBestPrice(address,address,uint256)"(
    _assetIn: PromiseOrValue<string>,
    _assetOut: PromiseOrValue<string>,
    _amountIn: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  redeemNestToWeth(
    _nestAddress: PromiseOrValue<string>,
    _nestAmount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "redeemNestToWeth(address,uint256)"(
    _nestAddress: PromiseOrValue<string>,
    _nestAmount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  renounceOwnership(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "renounceOwnership()"(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setBalancerPoolMapping(
    _inputAsset: PromiseOrValue<string>,
    _pool: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setBalancerPoolMapping(address,bytes32)"(
    _inputAsset: PromiseOrValue<string>,
    _pool: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setCustomHop(
    _token: PromiseOrValue<string>,
    _hop: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setCustomHop(address,address)"(
    _token: PromiseOrValue<string>,
    _hop: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setUniPoolMapping(
    _outputAsset: PromiseOrValue<string>,
    _Fee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setUniPoolMapping(address,uint16)"(
    _outputAsset: PromiseOrValue<string>,
    _Fee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    customHops(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    "customHops(address)"(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    dexSwap(
      _assetIn: PromiseOrValue<string>,
      _assetOut: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _ammIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "dexSwap(address,address,uint256,uint256)"(
      _assetIn: PromiseOrValue<string>,
      _assetOut: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _ammIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    getBestPrice(
      _assetIn: PromiseOrValue<string>,
      _assetOut: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<NestRedeem.BestPriceStructOutput>;

    "getBestPrice(address,address,uint256)"(
      _assetIn: PromiseOrValue<string>,
      _assetOut: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<NestRedeem.BestPriceStructOutput>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    redeemNestToWeth(
      _nestAddress: PromiseOrValue<string>,
      _nestAmount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "redeemNestToWeth(address,uint256)"(
      _nestAddress: PromiseOrValue<string>,
      _nestAmount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    setBalancerPoolMapping(
      _inputAsset: PromiseOrValue<string>,
      _pool: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setBalancerPoolMapping(address,bytes32)"(
      _inputAsset: PromiseOrValue<string>,
      _pool: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    setCustomHop(
      _token: PromiseOrValue<string>,
      _hop: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setCustomHop(address,address)"(
      _token: PromiseOrValue<string>,
      _hop: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setUniPoolMapping(
      _outputAsset: PromiseOrValue<string>,
      _Fee: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setUniPoolMapping(address,uint16)"(
      _outputAsset: PromiseOrValue<string>,
      _Fee: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "OwnershipTransferred(address,address)"(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
  };

  estimateGas: {
    customHops(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "customHops(address)"(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    dexSwap(
      _assetIn: PromiseOrValue<string>,
      _assetOut: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _ammIndex: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "dexSwap(address,address,uint256,uint256)"(
      _assetIn: PromiseOrValue<string>,
      _assetOut: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _ammIndex: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getBestPrice(
      _assetIn: PromiseOrValue<string>,
      _assetOut: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "getBestPrice(address,address,uint256)"(
      _assetIn: PromiseOrValue<string>,
      _assetOut: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    redeemNestToWeth(
      _nestAddress: PromiseOrValue<string>,
      _nestAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "redeemNestToWeth(address,uint256)"(
      _nestAddress: PromiseOrValue<string>,
      _nestAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setBalancerPoolMapping(
      _inputAsset: PromiseOrValue<string>,
      _pool: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setBalancerPoolMapping(address,bytes32)"(
      _inputAsset: PromiseOrValue<string>,
      _pool: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setCustomHop(
      _token: PromiseOrValue<string>,
      _hop: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setCustomHop(address,address)"(
      _token: PromiseOrValue<string>,
      _hop: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setUniPoolMapping(
      _outputAsset: PromiseOrValue<string>,
      _Fee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setUniPoolMapping(address,uint16)"(
      _outputAsset: PromiseOrValue<string>,
      _Fee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    customHops(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "customHops(address)"(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    dexSwap(
      _assetIn: PromiseOrValue<string>,
      _assetOut: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _ammIndex: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "dexSwap(address,address,uint256,uint256)"(
      _assetIn: PromiseOrValue<string>,
      _assetOut: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      _ammIndex: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getBestPrice(
      _assetIn: PromiseOrValue<string>,
      _assetOut: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "getBestPrice(address,address,uint256)"(
      _assetIn: PromiseOrValue<string>,
      _assetOut: PromiseOrValue<string>,
      _amountIn: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    redeemNestToWeth(
      _nestAddress: PromiseOrValue<string>,
      _nestAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "redeemNestToWeth(address,uint256)"(
      _nestAddress: PromiseOrValue<string>,
      _nestAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setBalancerPoolMapping(
      _inputAsset: PromiseOrValue<string>,
      _pool: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setBalancerPoolMapping(address,bytes32)"(
      _inputAsset: PromiseOrValue<string>,
      _pool: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setCustomHop(
      _token: PromiseOrValue<string>,
      _hop: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setCustomHop(address,address)"(
      _token: PromiseOrValue<string>,
      _hop: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setUniPoolMapping(
      _outputAsset: PromiseOrValue<string>,
      _Fee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setUniPoolMapping(address,uint16)"(
      _outputAsset: PromiseOrValue<string>,
      _Fee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
